basePath: /api/v1
definitions:
  models.Task:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
info:
  contact:
    name: 50-Course
    url: https://github.com/50-Course
  description: This is the API Gateway for the Notes Tracker, a simple task management
    application. handling HTTP requests and translating them to gRPC calls.
  title: Notes Tracker API
  version: "1"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Fetches all tasks from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: List all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Creates a new task with title and description
      parameters:
      - description: Task payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Retrieves a single task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Updates an existing task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Task Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a task
      tags:
      - tasks
schemes:
- http
swagger: "2.0"
